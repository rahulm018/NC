<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>CoPQ Template Mapping</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap" rel="stylesheet">
    <!-- SheetJS library for Excel export -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/xlsx/0.18.5/xlsx.full.min.js"></script>
    <style>
        body {
            font-family: 'Inter', sans-serif;
        }
        /* Style for the spinner */
        .loader {
            border: 2px solid #f3f3f3;
            border-top: 2px solid #3498db;
            border-radius: 50%;
            width: 16px;
            height: 16px;
            animation: spin 1s linear infinite;
        }
        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }
        /* Hide form-error by default */
        .form-error {
            display: none;
        }
    </style>
</head>
<body class="bg-gray-50 text-gray-800">

    <div class="container mx-auto p-4 md:p-8 max-w-5xl">
        <header class="mb-8">
            <h1 class="text-3xl font-bold text-gray-900">CoPQ Template Mapping</h1>
            <p class="text-gray-600 mt-1">Map plants and suppliers to CoPQ templates and link them to NC types.</p>
        </header>

        <main class="space-y-12">
            <!-- Template Selection and NC Type Linking Section -->
            <section class="bg-white p-6 rounded-lg shadow-md">
                <h2 class="text-xl font-semibold mb-4 border-b pb-3">1. Template & Linked NC Type</h2>
                <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                    <div class="form-group">
                        <label for="template-name" class="block text-sm font-medium text-gray-700 mb-1">Template Name</label>
                        <p id="template-name" class="w-full p-3 bg-gray-100 border border-gray-300 rounded-md text-gray-700 shadow-sm">Material Defect Template</p>
                    </div>
                    <div class="form-group">
                        <label for="nc-type" class="block text-sm font-medium text-gray-700 mb-1">Linked NC Type</label>
                        <p id="nc-type" class="w-full p-3 bg-gray-100 border border-gray-300 rounded-md text-gray-700 shadow-sm">Material Non-Conformance</p>
                    </div>
                </div>
            </section>

            <!-- Mapping Interface Section -->
            <section class="bg-white p-6 rounded-lg shadow-md">
                <h2 class="text-xl font-semibold mb-4 border-b pb-3">2. Create New Mappings</h2>
                <form id="mapping-form" class="space-y-6">
                    <!-- Step 1: Plant Selection -->
                    <div>
                        <label for="plant-name" class="block text-sm font-medium text-gray-700 mb-1">1. Select a Plant</label>
                        <select id="plant-name" name="plant-name" class="w-full p-3 border border-gray-300 rounded-md shadow-sm focus:ring-indigo-500 focus:border-indigo-500">
                            <option value="Plant A - Bangalore">Plant A - Bangalore</option>
                            <option value="Plant B - Mumbai">Plant B - Mumbai</option>
                            <option value="Plant C - Chennai">Plant C - Chennai</option>
                        </select>
                    </div>

                    <!-- Step 2: Supplier Selection -->
                    <div>
                        <label for="supplier-selection-ui" class="block text-sm font-medium text-gray-700 mb-1">2. Bind Suppliers to the Selected Plant</label>
                        <div id="supplier-selection-ui" class="relative w-full p-2 border border-gray-300 rounded-md bg-white flex flex-wrap gap-2 min-h-[50px] items-center cursor-pointer hover:border-indigo-500" onclick="document.getElementById('open-supplier-modal-btn-hidden').click();">
                             <div id="supplier-pills-container" class="flex-grow flex flex-wrap gap-2">
                                <!-- Supplier pills will be inserted here -->
                             </div>
                             <!-- This is a visually hidden button, the click is triggered by the parent div -->
                             <button type="button" id="open-supplier-modal-btn-hidden" class="absolute top-1/2 right-3 -translate-y-1/2 bg-gray-200 text-gray-700 font-semibold py-1 px-3 rounded-md hover:bg-gray-300 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-gray-400 transition text-sm">Select Suppliers</button>
                        </div>
                        <p id="supplier-pills-container-error" class="form-error text-red-600 text-xs mt-1">At least one supplier must be selected.</p>
                    </div>
                    
                    <!-- Step 3: Add Button -->
                    <div class="pt-4 border-t">
                         <div class="flex justify-end">
                            <button type="submit" id="add-mapping-btn" class="bg-indigo-600 text-white font-semibold py-3 px-6 rounded-md hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 transition duration-150 ease-in-out flex items-center justify-center space-x-2">
                                <span class="btn-text">Add Mappings</span>
                                <div class="loader hidden"></div>
                            </button>
                        </div>
                    </div>
                </form>
            </section>


            <!-- Mapped Records Display Section -->
            <section class="bg-white p-6 rounded-lg shadow-md">
                <div class="flex justify-between items-center mb-4 border-b pb-3">
                    <h2 class="text-xl font-semibold">
                        3. Current Mappings for: <span id="current-template-title" class="text-indigo-600 font-bold">Material Defect Template</span>
                    </h2>
                    <button id="export-excel-btn" class="bg-green-600 text-white font-semibold py-2 px-4 rounded-md hover:bg-green-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500 transition text-sm flex items-center gap-2">
                        <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2">
                            <path stroke-linecap="round" stroke-linejoin="round" d="M12 10v6m0 0l-3-3m3 3l3-3m2 8H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z" />
                        </svg>
                        Export to Excel
                    </button>
                </div>
                <div class="overflow-x-auto">
                    <table class="min-w-full divide-y divide-gray-200">
                        <thead class="bg-gray-100">
                            <tr>
                                <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Supplier Code</th>
                                <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Supplier Name</th>
                                <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Plant Name</th>
                                <th scope="col" class="px-6 py-3 text-center text-xs font-medium text-gray-500 uppercase tracking-wider">Actions</th>
                            </tr>
                        </thead>
                        <tbody id="mapped-records-tbody" class="bg-white divide-y divide-gray-200">
                            <!-- Data will be managed by JavaScript -->
                            <tr>
                                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">V54321</td>
                                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">Component Solutions</td>
                                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">Plant A - Bangalore</td>
                                <td class="px-6 py-4 whitespace-nowrap text-center text-sm font-medium">
                                    <button class="delete-btn text-red-600 hover:text-red-900 transition duration-150 ease-in-out" aria-label="Delete mapping for V54321">Delete</button>
                                </td>
                            </tr>
                            <tr>
                                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">V98765</td>
                                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">Advanced Parts Co.</td>
                                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">Plant B - Mumbai</td>
                                <td class="px-6 py-4 whitespace-nowrap text-center text-sm font-medium">
                                    <button class="delete-btn text-red-600 hover:text-red-900 transition duration-150 ease-in-out" aria-label="Delete mapping for V98765">Delete</button>
                                </td>
                            </tr>
                        </tbody>
                    </table>
                </div>
            </section>
        </main>
    </div>

    <!-- Select Supplier Modal -->
    <div id="supplier-modal" class="fixed inset-0 bg-gray-600 bg-opacity-50 overflow-y-auto h-full w-full hidden" role="dialog" aria-modal="true" aria-labelledby="supplier-modal-title">
        <div class="relative top-10 mx-auto p-5 border w-full max-w-lg shadow-lg rounded-md bg-white">
            <div class="flex justify-between items-center border-b pb-3 mb-3">
                <h3 class="text-lg font-medium text-gray-900" id="supplier-modal-title">Select Suppliers</h3>
                <button id="close-supplier-modal-btn" class="text-gray-400 hover:text-gray-600" aria-label="Close">
                    <svg class="h-6 w-6" fill="none" stroke="currentColor" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path></svg>
                </button>
            </div>
            <div class="mb-4">
                <input type="text" id="supplier-search" placeholder="Search by supplier name or code..." class="w-full p-2 border border-gray-300 rounded-md">
            </div>
            <div class="max-h-64 overflow-y-auto border rounded-md">
                <table class="min-w-full divide-y divide-gray-200">
                     <thead class="bg-gray-50 sticky top-0">
                        <tr>
                            <th scope="col" class="p-4">
                                <input type="checkbox" id="select-all-suppliers" class="h-4 w-4 text-indigo-600 border-gray-300 rounded focus:ring-indigo-500">
                            </th>
                            <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                                Supplier
                            </th>
                        </tr>
                    </thead>
                    <tbody id="supplier-modal-tbody" class="bg-white divide-y divide-gray-200">
                        <!-- Supplier data will be populated by JS -->
                        <tr>
                             <td class="p-4">
                                <input type="checkbox" class="supplier-checkbox h-4 w-4 text-indigo-600 border-gray-300 rounded focus:ring-indigo-500" data-value="V54321,Component Solutions">
                            </td>
                            <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">Component Solutions (V54321)</td>
                        </tr>
                        <tr>
                             <td class="p-4">
                                <input type="checkbox" class="supplier-checkbox h-4 w-4 text-indigo-600 border-gray-300 rounded focus:ring-indigo-500" data-value="V98765,Advanced Parts Co.">
                            </td>
                            <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">Advanced Parts Co. (V98765)</td>
                        </tr>
                        <tr>
                            <td class="p-4">
                                <input type="checkbox" class="supplier-checkbox h-4 w-4 text-indigo-600 border-gray-300 rounded focus:ring-indigo-500" data-value="V11223,Precision Manufacturing">
                            </td>
                            <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">Precision Manufacturing (V11223)</td>
                        </tr>
                        <tr>
                           <td class="p-4">
                                <input type="checkbox" class="supplier-checkbox h-4 w-4 text-indigo-600 border-gray-300 rounded focus:ring-indigo-500" data-value="V44556,Global Supplies Ltd.">
                            </td>
                            <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">Global Supplies Ltd. (V44556)</td>
                        </tr>
                    </tbody>
                </table>
            </div>
            <div class="items-center px-4 py-3 mt-4 text-right space-x-2">
                 <button id="cancel-select-supplier-btn" class="px-4 py-2 bg-gray-200 text-gray-900 text-base font-medium rounded-md w-auto hover:bg-gray-300 focus:outline-none">
                    Cancel
                </button>
                <button id="add-selected-suppliers-btn" class="px-4 py-2 bg-indigo-600 text-white text-base font-medium rounded-md w-auto hover:bg-indigo-700 focus:outline-none">
                    Add Selected
                </button>
            </div>
        </div>
    </div>

    <!-- Deletion Confirmation Modal -->
    <div id="delete-modal" class="fixed inset-0 bg-gray-600 bg-opacity-50 overflow-y-auto h-full w-full hidden" aria-labelledby="modal-title" role="dialog" aria-modal="true">
        <div class="relative top-20 mx-auto p-5 border w-96 shadow-lg rounded-md bg-white">
            <div class="mt-3 text-center">
                <div class="mx-auto flex items-center justify-center h-12 w-12 rounded-full bg-red-100">
                    <svg class="h-6 w-6 text-red-600" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z"></path></svg>
                </div>
                <h3 class="text-lg leading-6 font-medium text-gray-900" id="modal-title">Delete Mapping?</h3>
                <div class="mt-2 px-7 py-3">
                    <p class="text-sm text-gray-500">Are you sure you want to delete this mapping? This action cannot be undone.</p>
                </div>
                <div class="items-center px-4 py-3 space-x-4">
                    <button id="confirm-delete-btn" class="px-4 py-2 bg-red-600 text-white text-base font-medium rounded-md w-auto hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500">
                        Confirm Delete
                    </button>
                    <button id="cancel-delete-btn" class="px-4 py-2 bg-gray-200 text-gray-900 text-base font-medium rounded-md w-auto hover:bg-gray-300 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-gray-400">
                        Cancel
                    </button>
                </div>
            </div>
        </div>
    </div>


    <script>
        document.addEventListener('DOMContentLoaded', () => {
            let selectedSuppliers = [];

            const mappingForm = document.getElementById('mapping-form');
            const addMappingBtn = document.getElementById('add-mapping-btn');
            const tableBody = document.getElementById('mapped-records-tbody');
            const supplierPillsContainer = document.getElementById('supplier-pills-container');
            const exportExcelBtn = document.getElementById('export-excel-btn');
            
            // --- Supplier Modal Elements ---
            const supplierModal = document.getElementById('supplier-modal');
            const openSupplierModalBtn = document.getElementById('open-supplier-modal-btn-hidden');
            const closeSupplierModalBtn = document.getElementById('close-supplier-modal-btn');
            const cancelSelectSupplierBtn = document.getElementById('cancel-select-supplier-btn');
            const addSelectedSuppliersBtn = document.getElementById('add-selected-suppliers-btn');
            const supplierModalTbody = document.getElementById('supplier-modal-tbody');
            const supplierSearch = document.getElementById('supplier-search');
            const selectAllSuppliersCheckbox = document.getElementById('select-all-suppliers');

            // --- Delete Modal Elements ---
            const deleteModal = document.getElementById('delete-modal');
            const confirmDeleteBtn = document.getElementById('confirm-delete-btn');
            const cancelDeleteBtn = document.getElementById('cancel-delete-btn');
            
            let rowToDelete = null;

            // --- Excel Export Logic ---
            const exportToExcel = () => {
                const rows = tableBody.querySelectorAll('tr');
                if (rows.length === 0) {
                    alert("No data to export.");
                    return;
                }
                
                const data = [];

                // Add headers from the table head
                const headerCells = document.querySelectorAll('#mapped-records-tbody tr:first-child td');
                const headers = ['Supplier Code', 'Supplier Name', 'Plant Name'];
                data.push(headers);

                // Add rows
                rows.forEach(row => {
                    const cells = row.querySelectorAll('td');
                    // We slice to ignore the last cell which is the 'Actions' button
                    const rowData = Array.from(cells).slice(0, 3).map(cell => cell.innerText);
                    data.push(rowData);
                });

                // Create worksheet and workbook
                const worksheet = XLSX.utils.aoa_to_sheet(data);
                const workbook = XLSX.utils.book_new();
                XLSX.utils.book_append_sheet(workbook, worksheet, 'Mappings');

                // Generate and download the file
                XLSX.writeFile(workbook, 'CoPQ_Mappings.xlsx');
            };

            exportExcelBtn.addEventListener('click', exportToExcel);


            // --- Supplier Pills Logic ---
            const renderSupplierPills = () => {
                supplierPillsContainer.innerHTML = '';
                if (selectedSuppliers.length === 0) {
                    supplierPillsContainer.innerHTML = '<span class="text-gray-400 text-sm p-1">Click to select suppliers...</span>';
                } else {
                    selectedSuppliers.forEach(supplier => {
                        const pill = document.createElement('div');
                        pill.className = 'bg-indigo-100 text-indigo-800 text-sm font-medium px-2.5 py-1 rounded-full flex items-center gap-2';
                        pill.innerHTML = `
                            <span>${supplier.name} (${supplier.code})</span>
                            <button type="button" class="text-indigo-600 hover:text-indigo-800 font-bold" data-code="${supplier.code}" aria-label="Remove ${supplier.name}">
                                &times;
                            </button>
                        `;
                        supplierPillsContainer.appendChild(pill);
                    });
                }
                validatePills();
            };

            supplierPillsContainer.addEventListener('click', (event) => {
                if (event.target.tagName === 'BUTTON') {
                    event.stopPropagation(); // Prevent modal from opening when removing a pill
                    const codeToRemove = event.target.dataset.code;
                    selectedSuppliers = selectedSuppliers.filter(s => s.code !== codeToRemove);
                    renderSupplierPills();
                }
            });

            // --- Form Validation and Submission ---
            const validatePills = () => {
                const errorElement = document.getElementById('supplier-pills-container-error');
                const selectionUI = document.getElementById('supplier-selection-ui');
                if (selectedSuppliers.length === 0) {
                    selectionUI.classList.add('border-red-500');
                    if(errorElement) errorElement.style.display = 'block';
                    return false;
                } else {
                    selectionUI.classList.remove('border-red-500');
                    if(errorElement) errorElement.style.display = 'none';
                    return true;
                }
            };

            mappingForm.addEventListener('submit', (event) => {
                event.preventDefault();
                
                if (!validatePills()) return;

                const btnText = addMappingBtn.querySelector('.btn-text');
                const loader = addMappingBtn.querySelector('.loader');
                btnText.textContent = 'Adding...';
                loader.classList.remove('hidden');
                addMappingBtn.disabled = true;

                setTimeout(() => {
                    const plantName = document.getElementById('plant-name').value;
                    
                    selectedSuppliers.forEach(supplier => {
                        const newRow = document.createElement('tr');
                        newRow.innerHTML = `
                            <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">${supplier.code}</td>
                            <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">${supplier.name}</td>
                            <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">${plantName}</td>
                            <td class="px-6 py-4 whitespace-nowrap text-center text-sm font-medium">
                                <button class="delete-btn text-red-600 hover:text-red-900 transition" aria-label="Delete mapping for ${supplier.code}">Delete</button>
                            </td>
                        `;
                        tableBody.appendChild(newRow);
                    });
                    
                    selectedSuppliers = [];
                    renderSupplierPills();
                    // Do not reset the plant name
                    // mappingForm.reset(); 

                    btnText.textContent = 'Add Mappings';
                    loader.classList.add('hidden');
                    addMappingBtn.disabled = false;
                }, 500);
            });

            // --- Supplier Modal Logic ---
            const openSupplierModal = () => {
                // Pre-check boxes for already selected suppliers
                const checkboxes = supplierModal.querySelectorAll('.supplier-checkbox');
                checkboxes.forEach(cb => {
                    const [code] = cb.dataset.value.split(',');
                    cb.checked = selectedSuppliers.some(s => s.code === code);
                });
                supplierModal.classList.remove('hidden');
                supplierSearch.focus();
            };
            const closeSupplierModal = () => supplierModal.classList.add('hidden');

            openSupplierModalBtn.addEventListener('click', openSupplierModal);
            closeSupplierModalBtn.addEventListener('click', closeSupplierModal);
            cancelSelectSupplierBtn.addEventListener('click', closeSupplierModal);

            addSelectedSuppliersBtn.addEventListener('click', () => {
                selectedSuppliers = [];
                const checkboxes = supplierModal.querySelectorAll('.supplier-checkbox:checked');
                checkboxes.forEach(cb => {
                    const [code, name] = cb.dataset.value.split(',');
                    selectedSuppliers.push({ code, name });
                });
                renderSupplierPills();
                closeSupplierModal();
            });

            selectAllSuppliersCheckbox.addEventListener('change', (event) => {
                const checkboxes = supplierModalTbody.querySelectorAll('.supplier-checkbox');
                checkboxes.forEach(checkbox => {
                    if(checkbox.closest('tr').style.display !== 'none') {
                       checkbox.checked = event.target.checked;
                    }
                });
            });

            supplierSearch.addEventListener('input', () => {
                const filter = supplierSearch.value.toLowerCase();
                const rows = supplierModalTbody.getElementsByTagName('tr');
                for (let i = 0; i < rows.length; i++) {
                    const td = rows[i].getElementsByTagName('td')[1];
                    if (td) {
                        const txtValue = td.textContent || td.innerText;
                        if (txtValue.toLowerCase().indexOf(filter) > -1) {
                            rows[i].style.display = '';
                        } else {
                            rows[i].style.display = 'none';
                        }
                    }
                }
            });

            // --- Deletion Modal Logic ---
            const openModal = (row) => {
                rowToDelete = row;
                deleteModal.classList.remove('hidden');
                confirmDeleteBtn.focus();
            };



            const closeModal = () => {
                rowToDelete = null;
                deleteModal.classList.add('hidden');
            };

            tableBody.addEventListener('click', (event) => {
                if (event.target.classList.contains('delete-btn')) {
                    openModal(event.target.closest('tr'));
                }
            });

            confirmDeleteBtn.addEventListener('click', () => {
                if (rowToDelete) rowToDelete.remove();
                closeModal();
            });

            cancelDeleteBtn.addEventListener('click', closeModal);

            window.addEventListener('keydown', (event) => {
                if (event.key === 'Escape' && !deleteModal.classList.contains('hidden')) {
                    closeModal();
                }
                if (event.key === 'Escape' && !supplierModal.classList.contains('hidden')) {
                    closeSupplierModal();
                }
            });
            
            // Initial render of pills
            renderSupplierPills();
        });
    </script>

</body>
</html>
